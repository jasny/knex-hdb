'use strict';

exports.__esModule = true;

var _assign2 = require('lodash/assign');

var _assign3 = _interopRequireDefault(_assign2);

var _inherits = require('inherits');

var _inherits2 = _interopRequireDefault(_inherits);

var _columncompiler = require('knex/lib/schema/columncompiler');

var _columncompiler2 = _interopRequireDefault(_columncompiler);

var _helpers = require('knex/lib/helpers');

var helpers = _interopRequireWildcard(_helpers);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ColumnCompiler_HDB() {
  _columncompiler2.default.apply(this, arguments);
  this.modifiers = ['unsigned', 'nullable', 'defaultTo', 'comment', 'first', 'after', 'collate'];
}
// HDB Column Compiler
// -------

(0, _inherits2.default)(ColumnCompiler_HDB, _columncompiler2.default);

// Types
// ------

(0, _assign3.default)(ColumnCompiler_HDB.prototype, {

  increments: 'integer not null generated by default as identity',

  bigincrements: 'bigint not null generated by default as identity',

  tinyint: 'tinyint',
  smallint: 'smallint',

  floating: 'real',
  double: 'double',

  decimal: function decimal(precision, scale) {
    return 'decimal(' + this._num(precision, 8) + ', ' + this._num(scale, 2) + ')';
  },
  varchar: function varchar(length, charset) {
    return (charset === 'utf-8' ? 'nvarchar' : 'varchar') + ('(' + this._num(length, 255) + ')');
  },


  text: 'NCLOB',
  mediumtext: 'NCLOB',
  longtext: 'NCLOB',

  datetime: 'seconddate',
  timestamp: 'timestamp',

  binary: function binary(length) {
    return length ? 'varbinary(' + this._num(length) + ')' : 'blob';
  },


  // Modifiers
  // ------

  comment: function comment(_comment) {
    return _comment && 'comment \'' + _comment + '\'';
  }
});

exports.default = ColumnCompiler_HDB;
module.exports = exports['default'];